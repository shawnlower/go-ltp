syntax = "proto3";

// Compile w/ e.g.:
// $ protoc ltp.proto --go_out=plugins=grpc:.

package ltpserver;

message Empty {}

// Health check per docs at
// https://github.com/grpc/grpc/blob/master/doc/health-checking.md

message HealthCheckRequest {
    string service = 1;
}

message HealthCheckResponse {
    enum ServingStatus {
        UNKNOWN = 0;
        SERVING = 1;
        NOT_SERVING = 2;
    }
    ServingStatus status = 1;
}

service Health {
    rpc Check(HealthCheckRequest) returns (HealthCheckResponse);
}

// Main server definition


message VersionResponse {
    string VersionString = 1;
}

message Item {
    string Uri = 1;
    repeated ItemType ItemTypes = 2;
    repeated Statement Statements = 3;
}

message ItemType {
    string Uri = 1;
}

message Statement {
    string subject = 1;
    string predicate = 2;
    string object = 3;
    string scope = 4;
}

message CreateItemRequest {
    repeated ItemType ItemTypes = 1;
}

message CreateItemResponse {
    Item item = 1;
}

service API {
    rpc GetVersion(Empty) returns (VersionResponse);
    rpc CreateItem(CreateItemRequest) returns (CreateItemResponse);
}
